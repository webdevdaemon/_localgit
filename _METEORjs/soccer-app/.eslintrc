{
	// http://eslint.org/docs/rules/

	"ecmaFeatures": {
		"binaryLiterals": true, // enable binary literals
		"blockBindings": true, // enable let and const (aka block bindings)
		"defaultParams": true, // enable default function parameters
		"forOf": true, // enable for-of loops
		"generators": true, // enable generators
		"objectLiteralComputedProperties": true, // enable computed object literal property names
		"objectLiteralDuplicateProperties": true, // enable duplicate object literal properties in strict mode
		"objectLiteralShorthandMethods": true, // enable object literal shorthand methods
		"objectLiteralShorthandProperties": true, // enable object literal shorthand properties
		"octalLiterals": true, // enable octal literals
		"regexUFlag": true, // enable the regular expression u flag
		"regexYFlag": true, // enable the regular expression y flag
		"templateStrings": true, // enable template strings
		"unicodeCodePointEscapes": true, // enable code point escapes
		"jsx": true // enable JSX
	},

	"env": {
		"browser": true, // browser global variables.
		"node": true, // Node.js global variables and Node.js-specific rules.
		"amd": false, // defines require() and define() as global variables as per the amd spec.
		"mocha": false, // adds all of the Mocha testing global variables.
		"jasmine": false, // adds all of the Jasmine testing global variables for version 1.3 and 2.0.
		"phantomjs": false, // phantomjs global variables.
		"jquery": true, // jquery global variables.
		"prototypejs": false, // prototypejs global variables.
		"shelljs": false, // shelljs global variables.
	},

	"globals": {
		// e.g. "angular": true
	},

	"plugins": [
		'react', 'babel', 'node'
	],

	"rules": {
		////////// Possible Errors //////////

		"indent": [1, "tab"],
		"react/jsx-indent": [1, "tab"],
		"react/jsx-indent-props": [1, "tab"],
		"react/jsx-closing-bracket-location": 1,
		"react/prop-types": 0,
		"no-extra-parens": 1, // disallow unnecessary parentheses (off by default)
		"no-extra-semi": 1, // disallow unnecessary semicolons
		"no-func-assign": 1, // disallow overwriting functions written as function declarations
		"no-inner-declarations": 1, // disallow function or variable declarations in nested blocks
		"no-obj-calls": 1, // disallow the use of object properties of the global object (Math and JSON) as functions
		"no-unreachable": 1, // disallow unreachable statements after a return, throw, continue, or break statement
		"valid-typeof": 1, // Ensure that the results of typeof are compared against a valid string


		////////// Best Practices //////////

		"no-labels": 1, // disallow use of labeled statements
		"no-lone-blocks": 1, // disallow unnecessary nested blocks
		"no-loop-func": 2, // disallow creation of functions within loops
		"no-new": 2, // disallow use of new operator when not part of the assignment or comparison
		"vars-on-top": 1, // requires to declare all vars on top of their containing scope (off by default)
		"wrap-iife": 1, // require immediate function invocation to be wrapped in parentheses (off by default)

		////////// Variables //////////

		"no-delete-var": 1, // disallow deletion of variables
		"no-label-var": 1, // disallow labels that share a name with a variable
		"no-undef": 1, // disallow use of undeclared variables unless mentioned in a /*global */ block
		"no-undef-init": 1, // disallow use of undefined when initializing variables
		"no-undefined": 1, // disallow use of undefined variable (off by default)
		"no-unused-vars": 1, // disallow declaration of variables that are not used in the code
		"no-use-before-define": 1, // disallow use of variables before they are defined


		////////// Node.js //////////

		"handle-callback-err": 0, // enforces error handling in callbacks (off by default) (on by default in the node environment)
		"no-mixed-requires": 0, // disallow mixing regular variable and require declarations (off by default) (on by default in the node environment)
		"no-new-require": 0, // disallow use of new operator with the require function (off by default) (on by default in the node environment)
		"no-path-concat": 0, // disallow string concatenation with __dirname and __filename (off by default) (on by default in the node environment)
		"no-process-exit": 0, // disallow process.exit() (on by default in the node environment)
		"no-restricted-modules": 0, // restrict usage of specified node modules (off by default)
		"no-sync": 0, // disallow use of synchronous methods (off by default)


		////////// Stylistic Issues //////////

		"brace-style": [
			"warn",
			"stroustrup", {
				"allowSingleLine": true
			}
		],
		// enforce one true brace style (off by default)
		"new-cap": 1, // require a capital letter for constructors
		"new-parens": 1, // disallow the omission of parentheses when invoking a constructor with no arguments

		////////// ECMAScript 6 //////////

		"no-var": 1, // require let or const instead of var (off by default)

		////////// Legacy //////////

		"max-depth": 0, // specify the maximum depth that blocks can be nested (off by default)
		"max-len": 0, // specify the maximum length of a line in your program (off by default)
		"max-params": 0, // limits the number of parameters that can be used in the function declaration. (off by default)
		"max-statements": 0, // specify the maximum number of statement allowed in a function (off by default)
		"no-bitwise": 0, // disallow use of bitwise operators (off by default)
		"no-plusplus": 0 // disallow use of unary operators, ++ and -- (off by default)
	}
}
